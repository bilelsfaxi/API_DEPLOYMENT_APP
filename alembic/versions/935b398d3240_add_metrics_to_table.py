"""add_metrics_to table

Revision ID: 935b398d3240
Revises: 831033fcb787
Create Date: 2025-09-16 14:50:59.567145

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '935b398d3240'
down_revision: Union[str, Sequence[str], None] = '831033fcb787'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Créer le nouveau type ENUM s'il n'existe pas déjà
    posture_enum_new = postgresql.ENUM('assis', 'debout', 'a_pieds', name='postureenum', create_type=False)
    posture_enum_new.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('posture_detection_results', sa.Column('prediction_time', sa.Float(), nullable=True))
    op.add_column('posture_detection_results', sa.Column('frames_processed', sa.Integer(), nullable=True))
    op.alter_column('posture_detection_results', 'posture',
               existing_type=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'),
               type_=posture_enum_new, # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::postureenum')
    op.add_column('reference_posture_videos', sa.Column('description', sa.Text(), nullable=True))
    op.alter_column('reference_posture_videos', 'posture',
               existing_type=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'),
               type_=posture_enum_new, # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::postureenum')
    op.alter_column('validated_postures', 'posture',
               existing_type=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'),
               type_=posture_enum_new, # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::postureenum')
    op.alter_column('video_sessions', 'posture',
               existing_type=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'),
               type_=posture_enum_new, # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::postureenum')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    posture_enum_new = postgresql.ENUM('assis', 'debout', 'a_pieds', name='postureenum', create_type=False)
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('video_sessions', 'posture',
               existing_type=posture_enum_new,
               type_=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'), # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::posture_enum')
    op.alter_column('validated_postures', 'posture',
               existing_type=posture_enum_new,
               type_=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'), # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::posture_enum')
    op.alter_column('reference_posture_videos', 'posture',
               existing_type=posture_enum_new,
               type_=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'), # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::posture_enum')
    op.drop_column('reference_posture_videos', 'description')
    op.alter_column('posture_detection_results', 'posture',
               existing_type=posture_enum_new,
               type_=postgresql.ENUM('assis', 'debout', 'a_pieds', name='posture_enum'), # type: ignore
               existing_nullable=False,
               postgresql_using='posture::text::posture_enum')
    op.drop_column('posture_detection_results', 'frames_processed')
    op.drop_column('posture_detection_results', 'prediction_time')
    posture_enum_new.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
