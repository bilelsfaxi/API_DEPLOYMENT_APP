"""create_initial_tables_and_seed_

Revision ID: e5289e3dc26c
Revises: 
Create Date: 2025-09-02 17:35:35.501272

"""
from typing import Sequence, Union

from pgvector.sqlalchemy import VECTOR
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1766463d8d4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create the ENUM type explicitly if it doesn't exist.
    posture_enum = postgresql.ENUM('assis', 'debout', 'a pieds', name='posture_enum', create_type=False)
    posture_enum.create(op.get_bind(), checkfirst=True)

    op.execute('CREATE EXTENSION IF NOT EXISTS vector;')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', VECTOR(384), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('validated_postures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dog_id', sa.Integer(), nullable=False),
    sa.Column('posture', posture_enum, nullable=False),
    sa.Column('validated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['dog_id'], ['dogs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('dogs', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.add_column('posture_detection_results', sa.Column('video_id', sa.Integer(), nullable=True)) # Changed to nullable=True to match model
    op.add_column('posture_detection_results', sa.Column('posture', posture_enum, nullable=False))
    op.alter_column('posture_detection_results', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('posture_detection_results', 'session_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('posture_detection_results', 'confidence',
               existing_type=sa.REAL(),
               type_=sa.Float(),
               existing_nullable=False)
    op.create_foreign_key(None, 'posture_detection_results', 'reference_posture_videos', ['video_id'], ['id'])
    op.add_column('reference_posture_videos', sa.Column('posture', posture_enum, nullable=False))
    op.alter_column('reference_posture_videos', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False) # This was missing a posture column
    op.add_column('video_sessions', sa.Column('posture', posture_enum, nullable=False))
    op.alter_column('video_sessions', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('video_sessions', 'dog_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('video_sessions', 'success_detected',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint(op.f('video_sessions_reference_video_id_fkey'), 'video_sessions', type_='foreignkey')
    op.drop_column('video_sessions', 'reference_video_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('video_sessions', sa.Column('reference_video_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('video_sessions_reference_video_id_fkey'), 'video_sessions', 'reference_posture_videos', ['reference_video_id'], ['id'])
    op.alter_column('video_sessions', 'success_detected',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('video_sessions', 'dog_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('video_sessions', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('video_sessions', 'posture')
    op.alter_column('reference_posture_videos', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('reference_posture_videos', 'posture')
    op.drop_constraint(None, 'posture_detection_results', type_='foreignkey')
    op.alter_column('posture_detection_results', 'confidence',
               existing_type=sa.Float(),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('posture_detection_results', 'session_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('posture_detection_results', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('posture_detection_results', 'posture')
    op.drop_column('posture_detection_results', 'video_id')
    op.alter_column('dogs', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_table('validated_postures')
    op.drop_table('embeddings')
    op.execute('DROP EXTENSION IF EXISTS vector;')

    # Drop the ENUM type explicitly.
    posture_enum = postgresql.ENUM('assis', 'debout', 'a pieds', name='posture_enum', create_type=False)
    posture_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###